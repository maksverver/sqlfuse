To access the database manually, do:

  sqlcipher /path/to/db
  sqlite> PRAGMA key="YOUR-PASSWORD-HERE";
  sqlite> PRAGMA cipher_compatibility=3;  # if using SQLCipher version 4+
  sqlite> .schema
  sqlite> .dump
  etc.

WARNING: sqlite command history is stored in $HOME/.sqlite_history, including
the PRAGMA key line. You may want to scrub this file afterwards.

Mounting a database in writable mode requires not just write permission on the
database file itself, but also write (and execute) permission on the directory.
The reason is that SQLite will create temporary files (such as journals) while
executing database transactions.

Performance note:

 - Writing of large files seems to be very slow. This is probably because FUSE
   splits writes into small chunks, and sqlfs will commit every write to disk
   individually, which is very slow. On the upside: reads are very fast.
 - Currently, sqlfuse uses a 4096 byte blocksize by default (which matches the
   typical Linux pagesize, and seems to match the size of writes from FUSE).
   This performs well, but incurs a ~13% filesize overhead (i.e., a database
   is about 13% larger than the files it contains; more if the files are small).
   A large blocksize would be more space efficient but reduces write performance
   in practice.
