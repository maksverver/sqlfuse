=== EXAMPLE USAGE ===

% sqlfuse create example.db
% mkdir mnt
% sqlfuse mount example.db mnt/
% echo 'Hello world!' > mnt/hello.txt
% fusermount -u mnt/

To view more mount options:

% sqlfuse mount -h

(Not all FUSE options are supported!)


=== COMMAND REFERENCE ===

sqlfuse help

  Shows basic usage information.


sqlfuse create [-n|--no_password] <database>

  -n: Create an unencrypted database without a password.

  Prompts for a new password, unless -n is specified.


sqlfuse mount [-n|--no_password] [-r|--readonly] <database> <mountpoint> [FUSE options]

  -n: Mount an unencrypted database without a password.
  -r: Open the database in read-only mode.

  Promps for a password, unless -n is specified.

  Useful FUSE options:

    -h  To print usage information.
    -V  To print version information.
    -s  Run in single-threaded mode.
    -f  Run in the foreground.
    -d  Enable debug-mode (implies -f); more verbose logging.


sqlfuse rekey <database>

  Change the password on an encrypted database. (Cannot be used to enable/
  disable encryption.) Will prompt for the old and new password.


sqlfuse compact [-n|--no_password] <database>

  Rewrites the database file to minimize disk space used. This may reduce
  internal fragmentation as well.

  Note that rewriting the database requires a lot of temporary space (up to
  twice its original size), and since the old and new files will be entirely
  different, this affects the efficiency of incremental backups. Consequently,
  this command should be used sparingly.


sqlfuse check [-n|--no_password] <database>

  Checks the consistency of the filesystem. This is a read-only operation:
  it will warn if it encounters any errors, but will not attempt to fix them.

